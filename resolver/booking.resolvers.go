package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.48

import (
	"context"
	"room-reservation/ent"
	"room-reservation/ent/booking"
	graphql1 "room-reservation/graphql"
)

// User is the resolver for the user field.
func (r *bookingResolver) User(ctx context.Context, obj *ent.Booking) (*ent.User, error) {
	return r.client.Booking.
		Query().
		Where(booking.ID(obj.ID)).
		QueryUser().
		Only(ctx)
}

// Room is the resolver for the room field.
func (r *bookingResolver) Room(ctx context.Context, obj *ent.Booking) (*ent.Room, error) {
	return r.client.Booking.
		Query().
		Where(booking.ID(obj.ID)).
		QueryRoom().
		Only(ctx)
}

// Booking returns graphql1.BookingResolver implementation.
func (r *Resolver) Booking() graphql1.BookingResolver { return &bookingResolver{r} }

type bookingResolver struct{ *Resolver }
